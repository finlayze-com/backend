"""add symbol_identity and symbol_version

Revision ID: b09a69bcc94e
Revises: 59ccb8a916fb
Create Date: 2025-08-26 11:30:49.589749

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b09a69bcc94e'
down_revision: Union[str, Sequence[str], None] = 'd5dc4f5e293b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('symbol_identity', sa.Column('name_en', sa.Text(), nullable=True))
    op.alter_column('symbol_identity', 'symbol_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('symbol_identity_symbol_id_seq'::regclass)"))
    op.create_unique_constraint('uq_symbol_identity_stock_ticker', 'symbol_identity', ['stock_ticker'])
    op.add_column('symbol_version', sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False))
    op.add_column('symbol_version', sa.Column('name', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('name_en', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('sector', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('sector_code', sa.BigInteger(), nullable=True))
    op.add_column('symbol_version', sa.Column('subsector', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('market', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('panel', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('instrumentid', sa.Text(), nullable=True))
    op.add_column('symbol_version', sa.Column('share_number', sa.BigInteger(), nullable=True))
    op.add_column('symbol_version', sa.Column('base_vol', sa.BigInteger(), nullable=True))
    op.add_column('symbol_version', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('symbol_version', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('symbol_version', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('symbol_version', 'symbol_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('symbol_version', 'start_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_constraint(op.f('symbol_version_stock_ticker_key'), 'symbol_version', type_='unique')
    op.drop_constraint(op.f('uq_symbol_version'), 'symbol_version', type_='unique')
    op.create_unique_constraint('uq_symbol_version_inscode', 'symbol_version', ['inscode'])
    op.create_unique_constraint(None, 'symbol_version', ['inscode'])
    op.drop_constraint(op.f('symbol_version_symbol_id_fkey'), 'symbol_version', type_='foreignkey')
    op.create_foreign_key(None, 'symbol_version', 'symbol_identity', ['symbol_id'], ['symbol_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'symbol_version', type_='foreignkey')
    op.create_foreign_key(op.f('symbol_version_symbol_id_fkey'), 'symbol_version', 'symbol_identity', ['symbol_id'], ['symbol_id'])
    op.drop_constraint(None, 'symbol_version', type_='unique')
    op.drop_constraint('uq_symbol_version_inscode', 'symbol_version', type_='unique')
    op.create_unique_constraint(op.f('uq_symbol_version'), 'symbol_version', ['symbol_id', 'inscode'])
    op.create_unique_constraint(op.f('symbol_version_stock_ticker_key'), 'symbol_version', ['stock_ticker'])
    op.alter_column('symbol_version', 'start_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('symbol_version', 'symbol_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False)
    op.alter_column('symbol_version', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('symbol_version', 'updated_at')
    op.drop_column('symbol_version', 'created_at')
    op.drop_column('symbol_version', 'base_vol')
    op.drop_column('symbol_version', 'share_number')
    op.drop_column('symbol_version', 'instrumentid')
    op.drop_column('symbol_version', 'panel')
    op.drop_column('symbol_version', 'market')
    op.drop_column('symbol_version', 'subsector')
    op.drop_column('symbol_version', 'sector_code')
    op.drop_column('symbol_version', 'sector')
    op.drop_column('symbol_version', 'name_en')
    op.drop_column('symbol_version', 'name')
    op.drop_column('symbol_version', 'is_active')
    op.drop_constraint('uq_symbol_identity_stock_ticker', 'symbol_identity', type_='unique')
    op.alter_column('symbol_identity', 'symbol_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('symbol_identity_symbol_id_seq'::regclass)"))
    op.drop_column('symbol_identity', 'name_en')
    # ### end Alembic commands ###
