from sqlalchemy import Column, Integer, Float, String, DateTime, Boolean
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class DailyIndicators(Base):
    __tablename__ = 'daily_indicators'

    stock_ticker = Column(String)
    date_miladi = Column(DateTime)
    ema_20 = Column(Float)
    ema_50 = Column(Float)
    ema_100 = Column(Float)
    rsi = Column(Float)
    macd = Column(Float)
    macd_signal = Column(Float)
    macd_hist = Column(Float)
    tenkan = Column(Float)
    kijun = Column(Float)
    senkou_a = Column(Float)
    senkou_b = Column(Float)
    chikou = Column(Float)
    signal_ichimoku_buy = Column(Integer)
    signal_ichimoku_sell = Column(Integer)
    signal_ema_cross_buy = Column(Integer)
    signal_ema_cross_sell = Column(Integer)
    signal_rsi_buy = Column(Integer)
    signal_rsi_sell = Column(Integer)
    signal_macd_buy = Column(Integer)
    signal_macd_sell = Column(Integer)
    signal_ema50_100_buy = Column(Integer)
    signal_ema50_100_sell = Column(Integer)
    atr_22 = Column(Float)
    renko_22 = Column(String)
    ema_20_d = Column(Float)
    ema_50_d = Column(Float)
    ema_100_d = Column(Float)
    rsi_d = Column(Float)
    macd_d = Column(Float)
    macd_signal_d = Column(Float)
    macd_hist_d = Column(Float)
    tenkan_d = Column(Float)
    kijun_d = Column(Float)
    senkou_a_d = Column(Float)
    senkou_b_d = Column(Float)
    chikou_d = Column(Float)
    signal_ichimoku_buy_d = Column(Integer)
    signal_ichimoku_sell_d = Column(Integer)
    signal_ema_cross_buy_d = Column(Integer)
    signal_ema_cross_sell_d = Column(Integer)
    signal_rsi_buy_d = Column(Integer)
    signal_rsi_sell_d = Column(Integer)
    signal_macd_buy_d = Column(Integer)
    signal_macd_sell_d = Column(Integer)
    signal_ema50_100_buy_d = Column(Integer)
    signal_ema50_100_sell_d = Column(Integer)
    atr_22_d = Column(Float)
    renko_22_d = Column(String)

class DailyJoinedData(Base):
    __tablename__ = 'daily_joined_data'

    id = Column(Integer, primary_key=True)
    stock_ticker = Column(String)
    j_date = Column(String)
    date_miladi = Column(DateTime)
    weekday = Column(String)
    open = Column(Integer)
    high = Column(Integer)
    low = Column(Integer)
    close = Column(Integer)
    final_price = Column(Integer)
    volume = Column(Integer)
    value = Column(Integer)
    trade_count = Column(Integer)
    name = Column(String)
    market = Column(String)
    adjust_open = Column(Integer)
    adjust_high = Column(Integer)
    adjust_low = Column(Integer)
    adjust_close = Column(Integer)
    adjust_final_price = Column(Integer)
    adjust_open_usd = Column(Float)
    adjust_high_usd = Column(Float)
    adjust_low_usd = Column(Float)
    adjust_close_usd = Column(Float)
    value_usd = Column(Float)
    dollar_rate = Column(Float)
    is_temp = Column(Boolean)
    ema_20 = Column(Float)
    ema_50 = Column(Float)
    ema_100 = Column(Float)
    rsi = Column(Float)
    macd = Column(Float)
    macd_signal = Column(Float)
    macd_hist = Column(Float)
    tenkan = Column(Float)
    kijun = Column(Float)
    senkou_a = Column(Float)
    senkou_b = Column(Float)
    chikou = Column(Float)
    signal_ichimoku_buy = Column(Integer)
    signal_ichimoku_sell = Column(Integer)
    signal_ema_cross_buy = Column(Integer)
    signal_ema_cross_sell = Column(Integer)
    signal_rsi_buy = Column(Integer)
    signal_rsi_sell = Column(Integer)
    signal_macd_buy = Column(Integer)
    signal_macd_sell = Column(Integer)
    signal_ema50_100_buy = Column(Integer)
    signal_ema50_100_sell = Column(Integer)
    atr_22 = Column(Float)
    renko_22 = Column(String)
    signal_ichimoku_buy_usd = Column(Integer)
    signal_ichimoku_sell_usd = Column(Integer)
    signal_ema_cross_buy_usd = Column(Integer)
    signal_ema_cross_sell_usd = Column(Integer)
    signal_rsi_buy_usd = Column(Integer)
    signal_rsi_sell_usd = Column(Integer)
    signal_macd_buy_usd = Column(Integer)
    signal_macd_sell_usd = Column(Integer)
    signal_ema50_100_buy_usd = Column(Integer)
    signal_ema50_100_sell_usd = Column(Integer)
    renko_22_usd = Column(String)
    inscode = Column(String)
    buy_i_volume = Column(Float)
    buy_n_volume = Column(Float)
    buy_i_value = Column(Float)
    buy_n_value = Column(Float)
    buy_n_count = Column(Integer)
    sell_i_volume = Column(Float)
    buy_i_count = Column(Integer)
    sell_n_volume = Column(Float)
    sell_i_value = Column(Float)
    sell_n_value = Column(Float)
    sell_n_count = Column(Integer)
    sell_i_count = Column(Integer)
    buy_i_value_usd = Column(Float)
    buy_n_value_usd = Column(Float)
    sell_i_value_usd = Column(Float)
    sell_n_value_usd = Column(Float)
    name_en = Column(String)
    sector = Column(String)
    sector_code = Column(Integer)
    subsector = Column(String)
    market2 = Column(String)
    panel = Column(String)
    share_number = Column(Integer)
    base_vol = Column(Integer)
    instrumentID = Column(String)
    marketcap = Column(Integer)
    marketcap_usd = Column(Float)

class DailyMarketSummary(Base):
    __tablename__ = 'daily_market_summary'

    date = Column(DateTime)
    stock_ticker = Column(String)
    sector = Column(String)
    value = Column(Integer)
    market_cap = Column(Integer)
    value_usd = Column(Float)
    market_cap_usd = Column(Float)

class DailyStockData(Base):
    __tablename__ = 'daily_stock_data'

    id = Column(Integer, primary_key=True)
    stock_ticker = Column(String)
    j_date = Column(String)
    date_miladi = Column(DateTime)
    weekday = Column(String)
    open = Column(Integer)
    high = Column(Integer)
    low = Column(Integer)
    close = Column(Integer)
    final_price = Column(Integer)
    volume = Column(Integer)
    value = Column(Integer)
    trade_count = Column(Integer)
    name = Column(String)
    market = Column(String)
    adjust_open = Column(Integer)
    adjust_high = Column(Integer)
    adjust_low = Column(Integer)
    adjust_close = Column(Integer)
    adjust_final_price = Column(Integer)
    adjust_open_usd = Column(Float)
    adjust_high_usd = Column(Float)
    adjust_low_usd = Column(Float)
    adjust_close_usd = Column(Float)
    value_usd = Column(Float)
    dollar_rate = Column(Float)
    is_temp = Column(Boolean)

class DollarData(Base):
    __tablename__ = 'dollar_data'

    date_miladi = Column(DateTime)
    open = Column(Float)
    high = Column(Float)
    low = Column(Float)
    close = Column(Float)

class Haghighi(Base):
    __tablename__ = 'haghighi'

    recdate = Column(DateTime)
    inscode = Column(String)
    buy_i_volume = Column(Float)
    buy_n_volume = Column(Float)
    buy_i_value = Column(Float)
    buy_n_value = Column(Float)
    buy_n_count = Column(Integer)
    sell_i_volume = Column(Float)
    buy_i_count = Column(Integer)
    sell_n_volume = Column(Float)
    sell_i_value = Column(Float)
    sell_n_value = Column(Float)
    sell_n_count = Column(Integer)
    sell_i_count = Column(Integer)
    symbol = Column(String)
    dollar_rate = Column(Float)
    buy_i_value_usd = Column(Float)
    buy_n_value_usd = Column(Float)
    sell_i_value_usd = Column(Float)
    sell_n_value_usd = Column(Float)
    sector = Column(String)
    is_temp = Column(Boolean)

class LiveMarketData(Base):
    __tablename__ = 'live_market_data'

    Ticker = Column(String)
    trade_type = Column("Trade Type", String)
    Time = Column(String)
    Open = Column(Float)
    High = Column(Float)
    Low = Column(Float)
    Close = Column(Float)
    Final = Column(Float)
    close_percent = Column("Close(%)", Float)
    final_percent = Column("Final(%)", Float)
    Day_UL = Column(Float)
    Day_LL = Column(Float)
    Value = Column(Integer)
    bq_value = Column("BQ-Value", Integer)
    sq_value = Column("SQ-Value", Integer)
    BQPC = Column(Float)
    SQPC = Column(Float)
    Volume = Column(Integer)
    Vol_Buy_R = Column(Integer)
    Vol_Buy_I = Column(Integer)
    Vol_Sell_R = Column(Integer)
    Vol_Sell_I = Column(Integer)
    No = Column(Integer)
    No_Buy_R = Column(Integer)
    No_Buy_I = Column(Integer)
    No_Sell_R = Column(Integer)
    No_Sell_I = Column(Integer)
    Name = Column(String)
    Market = Column(String)
    Sector = Column(String)
    share_no = Column("Share-No", Integer)
    base_vol = Column("Base-Vol", Integer)
    market_cap = Column("Market Cap", Integer)
    EPS = Column(Float)
    Download = Column(DateTime)
    updated_at = Column(DateTime)

class OrderbookSnapshot(Base):
    __tablename__ = 'orderbook_snapshot'

    insCode = Column(Integer)
    Symbol = Column(String)
    Timestamp = Column(DateTime)
    BuyPrice1 = Column(Float)
    BuyVolume1 = Column(Integer)
    SellPrice1 = Column(Float)
    SellVolume1 = Column(Integer)
    BuyPrice2 = Column(Float)
    BuyVolume2 = Column(Integer)
    SellPrice2 = Column(Float)
    SellVolume2 = Column(Integer)
    BuyPrice3 = Column(Float)
    BuyVolume3 = Column(Integer)
    SellPrice3 = Column(Float)
    SellVolume3 = Column(Integer)
    BuyPrice4 = Column(Float)
    BuyVolume4 = Column(Integer)
    SellPrice4 = Column(Float)
    SellVolume4 = Column(Integer)
    BuyPrice5 = Column(Float)
    BuyVolume5 = Column(Integer)
    SellPrice5 = Column(Float)
    SellVolume5 = Column(Integer)
    Sector = Column(String)

class WeeklyHaghighi(Base):
    __tablename__ = 'weekly_haghighi'

    id = Column(Integer, primary_key=True)
    symbol = Column(String)
    week_start = Column(DateTime)
    week_end = Column(DateTime)
    buy_i_volume = Column(Integer)
    buy_n_volume = Column(Integer)
    buy_i_value = Column(Integer)
    buy_n_value = Column(Integer)
    buy_n_count = Column(Integer)
    sell_i_volume = Column(Integer)
    buy_i_count = Column(Integer)
    sell_n_volume = Column(Integer)
    sell_i_value = Column(Integer)
    sell_n_value = Column(Integer)
    sell_n_count = Column(Integer)
    sell_i_count = Column(Integer)
    buy_i_value_usd = Column(Float)
    buy_n_value_usd = Column(Float)
    sell_i_value_usd = Column(Float)
    sell_n_value_usd = Column(Float)

class WeeklyIndicators(Base):
    __tablename__ = 'weekly_indicators'

    stock_ticker = Column(String)
    week_end = Column(DateTime)
    ema_20 = Column(Float)
    ema_50 = Column(Float)
    ema_100 = Column(Float)
    rsi = Column(Float)
    macd = Column(Float)
    macd_signal = Column(Float)
    macd_hist = Column(Float)
    tenkan = Column(Float)
    kijun = Column(Float)
    senkou_a = Column(Float)
    senkou_b = Column(Float)
    chikou = Column(Float)
    signal_ichimoku_buy = Column(Integer)
    signal_ichimoku_sell = Column(Integer)
    signal_ema_cross_buy = Column(Integer)
    signal_ema_cross_sell = Column(Integer)
    signal_rsi_buy = Column(Integer)
    signal_rsi_sell = Column(Integer)
    signal_macd_buy = Column(Integer)
    signal_macd_sell = Column(Integer)
    signal_ema50_100_buy = Column(Integer)
    signal_ema50_100_sell = Column(Integer)
    atr_52 = Column(Float)
    renko_52 = Column(String)
    ema_20_d = Column(Float)
    ema_50_d = Column(Float)
    ema_100_d = Column(Float)
    rsi_d = Column(Float)
    macd_d = Column(Float)
    macd_signal_d = Column(Float)
    macd_hist_d = Column(Float)
    tenkan_d = Column(Float)
    kijun_d = Column(Float)
    senkou_a_d = Column(Float)
    senkou_b_d = Column(Float)
    chikou_d = Column(Float)
    signal_ichimoku_buy_d = Column(Integer)
    signal_ichimoku_sell_d = Column(Integer)
    signal_ema_cross_buy_d = Column(Integer)
    signal_ema_cross_sell_d = Column(Integer)
    signal_rsi_buy_d = Column(Integer)
    signal_rsi_sell_d = Column(Integer)
    signal_macd_buy_d = Column(Integer)
    signal_macd_sell_d = Column(Integer)
    signal_ema50_100_buy_d = Column(Integer)
    signal_ema50_100_sell_d = Column(Integer)
    atr_52_d = Column(Float)
    renko_52_d = Column(String)

class WeeklyJoinedData(Base):
    __tablename__ = 'weekly_joined_data'

    id = Column(Integer, primary_key=True)
    stock_ticker = Column(String)
    week_start = Column(DateTime)
    week_end = Column(DateTime)
    open = Column(Integer)
    high = Column(Integer)
    low = Column(Integer)
    close = Column(Integer)
    final_price = Column(Integer)
    adjust_open = Column(Integer)
    adjust_high = Column(Integer)
    adjust_low = Column(Integer)
    adjust_close = Column(Integer)
    adjust_final_price = Column(Integer)
    volume = Column(Integer)
    value = Column(Integer)
    name = Column(String)
    market = Column(String)
    adjust_open_usd = Column(Float)
    adjust_high_usd = Column(Float)
    adjust_low_usd = Column(Float)
    adjust_close_usd = Column(Float)
    value_usd = Column(Float)
    dollar_rate = Column(Float)
    ema_20 = Column(Float)
    ema_50 = Column(Float)
    ema_100 = Column(Float)
    rsi = Column(Float)
    macd = Column(Float)
    macd_signal = Column(Float)
    macd_hist = Column(Float)
    tenkan = Column(Float)
    kijun = Column(Float)
    senkou_a = Column(Float)
    senkou_b = Column(Float)
    chikou = Column(Float)
    signal_ichimoku_buy = Column(Integer)
    signal_ichimoku_sell = Column(Integer)
    signal_ema_cross_buy = Column(Integer)
    signal_ema_cross_sell = Column(Integer)
    signal_rsi_buy = Column(Integer)
    signal_rsi_sell = Column(Integer)
    signal_macd_buy = Column(Integer)
    signal_macd_sell = Column(Integer)
    signal_ema50_100_buy = Column(Integer)
    signal_ema50_100_sell = Column(Integer)
    atr_52 = Column(Float)
    renko_52 = Column(String)
    ema_20_d = Column(Float)
    ema_50_d = Column(Float)
    ema_100_d = Column(Float)
    rsi_d = Column(Float)
    macd_d = Column(Float)
    macd_signal_d = Column(Float)
    macd_hist_d = Column(Float)
    tenkan_d = Column(Float)
    kijun_d = Column(Float)
    senkou_a_d = Column(Float)
    senkou_b_d = Column(Float)
    chikou_d = Column(Float)
    signal_ichimoku_buy_d = Column(Integer)
    signal_ichimoku_sell_d = Column(Integer)
    signal_ema_cross_buy_d = Column(Integer)
    signal_ema_cross_sell_d = Column(Integer)
    signal_rsi_buy_d = Column(Integer)
    signal_rsi_sell_d = Column(Integer)
    signal_macd_buy_d = Column(Integer)
    signal_macd_sell_d = Column(Integer)
    signal_ema50_100_buy_d = Column(Integer)
    signal_ema50_100_sell_d = Column(Integer)
    atr_52_d = Column(Float)
    renko_52_d = Column(String)
    buy_i_volume = Column(Integer)
    buy_n_volume = Column(Integer)
    buy_i_value = Column(Integer)
    buy_n_value = Column(Integer)
    buy_n_count = Column(Integer)
    sell_i_volume = Column(Integer)
    buy_i_count = Column(Integer)
    sell_n_volume = Column(Integer)
    sell_i_value = Column(Integer)
    sell_n_value = Column(Integer)
    sell_n_count = Column(Integer)
    sell_i_count = Column(Integer)
    name_en = Column(String)
    sector = Column(String)
    sector_code = Column(Integer)
    subsector = Column(String)
    panel = Column(String)
    share_number = Column(Integer)
    base_vol = Column(Integer)
    instrumentID = Column(String)
    marketcap = Column(Integer)
    marketcap_usd = Column(Float)

class WeeklyStockData(Base):
    __tablename__ = 'weekly_stock_data'

    id = Column(Integer, primary_key=True)
    stock_ticker = Column(String)
    week_start = Column(DateTime)
    week_end = Column(DateTime)
    open = Column(Integer)
    high = Column(Integer)
    low = Column(Integer)
    close = Column(Integer)
    final_price = Column(Integer)
    adjust_open = Column(Integer)
    adjust_high = Column(Integer)
    adjust_low = Column(Integer)
    adjust_close = Column(Integer)
    adjust_final_price = Column(Integer)
    volume = Column(Integer)
    value = Column(Integer)
    name = Column(String)
    market = Column(String)
    adjust_open_usd = Column(Float)
    adjust_high_usd = Column(Float)
    adjust_low_usd = Column(Float)
    adjust_close_usd = Column(Float)
    value_usd = Column(Float)
    dollar_rate = Column(Float)
